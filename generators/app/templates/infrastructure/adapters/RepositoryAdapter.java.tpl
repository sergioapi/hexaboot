package <%= package %>;

import <%= pathMapper %>.<%= model %>Mapper;
import <%= pathModel %>.<%= model %>;
import <%= pathRepo %>.<%= model %>RepositoryPort;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Repository;
import java.util.List;
<% if (dataBaseEngine === 'MongoDB') 
{ %>import org.bson.types.ObjectId;
<% } %>

// Autogenerated <%= model %> Repository adapter class.

@Repository
@RequiredArgsConstructor
public class <%= model %>RepositoryAdapter implements <%= model %>RepositoryPort {
    private final <%= model %>DataRepository <%= modelVarName %>Repository;
    private final <%= model %>Mapper <%= modelVarName %>Mapper;

    @Override
    public <%= model %> save(<%= model %> <%= modelVarName %>) {
        return <%= modelVarName %>Mapper.toDomain(<%= modelVarName %>Repository.save(<%= modelVarName %>Mapper.toEntity(<%= modelVarName %>)));
    }  

    @Override
    public <%= model %> findById(String strId) {
        <% if (dataBaseEngine === 'MongoDB') { %> ObjectId id = new ObjectId(strId); <% } else { %> Long id = Long.valueOf(strId); <% } %>
        return <%= modelVarName %>Mapper.toDomain(<%= modelVarName %>Repository.findById(id).orElse(null));
    }

    @Override
    public List<<%= model %>> findAll() {
        return <%= modelVarName %>Mapper.toDomainList(<%= modelVarName %>Repository.findAll());
    }

    @Override
    public Boolean deleteById(String strId) {
        <% if (dataBaseEngine === 'MongoDB') { %> ObjectId id = new ObjectId(strId); <% } else { %> Long id = Long.valueOf(strId); <% } %>
        <%= model %> <%= modelVarName %> = <%= modelVarName %>Mapper.toDomain(<%= modelVarName %>Repository.findById(id).orElse(null));
        if(<%= modelVarName %>!=null)
            <%= modelVarName %>Repository.delete(<%= modelVarName %>Mapper.toEntity(<%= modelVarName %>));
        return <%= modelVarName %>!=null;
    }
    
    @Override
    public <%= model %> update(<%= model %> <%= modelVarName %>) {
        if(<%= modelVarName %>.getId() == null)
            return null;
        <% if (dataBaseEngine === 'MongoDB') { %> ObjectId id = new ObjectId(<%= modelVarName %>.getId()); <% } else { %> Long id = Long.valueOf(<%= modelVarName %>.getId()); <% } %>
        <%= model %> existing<%= model %> = <%= modelVarName %>Mapper.toDomain(<%= modelVarName %>Repository.findById(id).orElse(null));
        if(existing<%= model %> != null)
            return <%= modelVarName %>Mapper.toDomain(<%= modelVarName %>Repository.save(<%= modelVarName %>Mapper.toEntity(<%= modelVarName %>)));
        return null;
    }
}
